Setting up environment...
Environment set up.
Augmenting data using convolutional multidecoder...
Constructing model...
Done constructing model.
CNNMultidecoder (
  (encoder_conv): Sequential (
    (conv2d_0): Conv2d(1, 256, kernel_size=(3, 3), stride=(1, 1))
    (batchnorm2d_0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (maxpool2d_0): MaxPool2d (size=(1, 3), stride=(1, 3), dilation=(1, 1))
    (conv2d_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (batchnorm2d_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (maxpool2d_1): MaxPool2d (size=(1, 3), stride=(1, 3), dilation=(1, 1))
    (conv2d_2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
    (batchnorm2d_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (SELU_2): SELU
  )
  (encoder_fc): Sequential (
    (lin_0): Linear (3840 -> 1024)
    (batchnorm1d_0): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (lin_1): Linear (1024 -> 1024)
    (batchnorm1d_1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (lin_final): Linear (1024 -> 1024)
    (SELU_final): SELU
  )
  (decoder_fc_ihm): Sequential (
    (lin_0): Linear (1024 -> 1024)
    (batchnorm1d_0): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (lin_1): Linear (1024 -> 1024)
    (batchnorm1d_1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (lin_final): Linear (1024 -> 3840)
    (SELU_final): SELU
  )
  (decoder_deconv_ihm): Sequential (
    (conv2d_0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (maxunpool2d_1): MaxUnpool2d (size=(1, 3), stride=(1, 3), padding=(0, 0))
    (conv2d_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (maxunpool2d_2): MaxUnpool2d (size=(1, 3), stride=(1, 3), padding=(0, 0))
    (conv2d_2): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_2): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
    (SELU_2): SELU
  )
  (decoder_fc_sdm1): Sequential (
    (lin_0): Linear (1024 -> 1024)
    (batchnorm1d_0): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (lin_1): Linear (1024 -> 1024)
    (batchnorm1d_1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (lin_final): Linear (1024 -> 3840)
    (SELU_final): SELU
  )
  (decoder_deconv_sdm1): Sequential (
    (conv2d_0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_0): SELU
    (maxunpool2d_1): MaxUnpool2d (size=(1, 3), stride=(1, 3), padding=(0, 0))
    (conv2d_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (SELU_1): SELU
    (maxunpool2d_2): MaxUnpool2d (size=(1, 3), stride=(1, 3), padding=(0, 0))
    (conv2d_2): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2))
    (batchnorm2d_2): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True)
    (SELU_2): SELU
  )
)
Loading checkpoint...
Done augmenting data using convolutional multidecoder.
